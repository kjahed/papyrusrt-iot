// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_RAWTYPESUPPORTC_FZWLBN_H_
#define _TAO_IDL_RAWTYPESUPPORTC_FZWLBN_H_


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "RawC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace PapyrusrtDDS
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< PapyrusrtDDS::RawBuffer, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> RawBufferSeq;
  

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RawBufferSeq;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_PAPYRUSRTDDS_RAWBUFFERTYPESUPPORT__VAR_OUT_CH_)
#define _PAPYRUSRTDDS_RAWBUFFERTYPESUPPORT__VAR_OUT_CH_

  class RawBufferTypeSupport;
  typedef RawBufferTypeSupport *RawBufferTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        RawBufferTypeSupport
      >
    RawBufferTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        RawBufferTypeSupport
      >
    RawBufferTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RawBufferTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RawBufferTypeSupport_ptr _ptr_type;
    typedef RawBufferTypeSupport_var _var_type;
    typedef RawBufferTypeSupport_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static RawBufferTypeSupport_ptr _duplicate (RawBufferTypeSupport_ptr obj);

    static void _tao_release (RawBufferTypeSupport_ptr obj);

    static RawBufferTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static RawBufferTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RawBufferTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RawBufferTypeSupport (void);

    

    virtual ~RawBufferTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RawBufferTypeSupport (const RawBufferTypeSupport &);

    void operator= (const RawBufferTypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RawBufferTypeSupport;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_PAPYRUSRTDDS_RAWBUFFERDATAWRITER__VAR_OUT_CH_)
#define _PAPYRUSRTDDS_RAWBUFFERDATAWRITER__VAR_OUT_CH_

  class RawBufferDataWriter;
  typedef RawBufferDataWriter *RawBufferDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        RawBufferDataWriter
      >
    RawBufferDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        RawBufferDataWriter
      >
    RawBufferDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RawBufferDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RawBufferDataWriter_ptr _ptr_type;
    typedef RawBufferDataWriter_var _var_type;
    typedef RawBufferDataWriter_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static RawBufferDataWriter_ptr _duplicate (RawBufferDataWriter_ptr obj);

    static void _tao_release (RawBufferDataWriter_ptr obj);

    static RawBufferDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static RawBufferDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RawBufferDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::PapyrusrtDDS::RawBuffer & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::PapyrusrtDDS::RawBuffer & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::PapyrusrtDDS::RawBuffer & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::PapyrusrtDDS::RawBuffer & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::PapyrusrtDDS::RawBuffer & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::PapyrusrtDDS::RawBuffer & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::PapyrusrtDDS::RawBuffer & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::PapyrusrtDDS::RawBuffer & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::PapyrusrtDDS::RawBuffer & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::PapyrusrtDDS::RawBuffer & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RawBufferDataWriter (void);

    

    virtual ~RawBufferDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RawBufferDataWriter (const RawBufferDataWriter &);

    void operator= (const RawBufferDataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RawBufferDataWriter;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_PAPYRUSRTDDS_RAWBUFFERDATAREADER__VAR_OUT_CH_)
#define _PAPYRUSRTDDS_RAWBUFFERDATAREADER__VAR_OUT_CH_

  class RawBufferDataReader;
  typedef RawBufferDataReader *RawBufferDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        RawBufferDataReader
      >
    RawBufferDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        RawBufferDataReader
      >
    RawBufferDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RawBufferDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RawBufferDataReader_ptr _ptr_type;
    typedef RawBufferDataReader_var _var_type;
    typedef RawBufferDataReader_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static RawBufferDataReader_ptr _duplicate (RawBufferDataReader_ptr obj);

    static void _tao_release (RawBufferDataReader_ptr obj);

    static RawBufferDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static RawBufferDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RawBufferDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::PapyrusrtDDS::RawBuffer & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::PapyrusrtDDS::RawBuffer & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::PapyrusrtDDS::RawBufferSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::PapyrusrtDDS::RawBufferSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::PapyrusrtDDS::RawBuffer & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::PapyrusrtDDS::RawBuffer & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RawBufferDataReader (void);

    

    virtual ~RawBufferDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    RawBufferDataReader (const RawBufferDataReader &);

    void operator= (const RawBufferDataReader &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:37

  extern  ::CORBA::TypeCode_ptr const _tc_RawBufferDataReader;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module PapyrusrtDDS

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_PAPYRUSRTDDS_RAWBUFFERTYPESUPPORT__TRAITS_)
#define _PAPYRUSRTDDS_RAWBUFFERTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::PapyrusrtDDS::RawBufferTypeSupport>
  {
    static ::PapyrusrtDDS::RawBufferTypeSupport_ptr duplicate (
        ::PapyrusrtDDS::RawBufferTypeSupport_ptr p);
    static void release (
        ::PapyrusrtDDS::RawBufferTypeSupport_ptr p);
    static ::PapyrusrtDDS::RawBufferTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PapyrusrtDDS::RawBufferTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_PAPYRUSRTDDS_RAWBUFFERDATAWRITER__TRAITS_)
#define _PAPYRUSRTDDS_RAWBUFFERDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::PapyrusrtDDS::RawBufferDataWriter>
  {
    static ::PapyrusrtDDS::RawBufferDataWriter_ptr duplicate (
        ::PapyrusrtDDS::RawBufferDataWriter_ptr p);
    static void release (
        ::PapyrusrtDDS::RawBufferDataWriter_ptr p);
    static ::PapyrusrtDDS::RawBufferDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PapyrusrtDDS::RawBufferDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_PAPYRUSRTDDS_RAWBUFFERDATAREADER__TRAITS_)
#define _PAPYRUSRTDDS_RAWBUFFERDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::PapyrusrtDDS::RawBufferDataReader>
  {
    static ::PapyrusrtDDS::RawBufferDataReader_ptr duplicate (
        ::PapyrusrtDDS::RawBufferDataReader_ptr p);
    static void release (
        ::PapyrusrtDDS::RawBufferDataReader_ptr p);
    static ::PapyrusrtDDS::RawBufferDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::PapyrusrtDDS::RawBufferDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PapyrusrtDDS
{
   void operator<<= ( ::CORBA::Any &, RawBufferTypeSupport_ptr); // copying
   void operator<<= ( ::CORBA::Any &, RawBufferTypeSupport_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RawBufferTypeSupport_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferTypeSupport_ptr); // copying
 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferTypeSupport_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PapyrusrtDDS::RawBufferTypeSupport_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PapyrusrtDDS
{
   void operator<<= ( ::CORBA::Any &, RawBufferDataWriter_ptr); // copying
   void operator<<= ( ::CORBA::Any &, RawBufferDataWriter_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RawBufferDataWriter_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferDataWriter_ptr); // copying
 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferDataWriter_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PapyrusrtDDS::RawBufferDataWriter_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:44



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PapyrusrtDDS
{
   void operator<<= ( ::CORBA::Any &, RawBufferDataReader_ptr); // copying
   void operator<<= ( ::CORBA::Any &, RawBufferDataReader_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, RawBufferDataReader_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferDataReader_ptr); // copying
 void operator<<= (::CORBA::Any &, PapyrusrtDDS::RawBufferDataReader_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PapyrusrtDDS::RawBufferDataReader_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "RawTypeSupportC.inl"
#endif /* defined INLINE */

#endif /* ifndef */

