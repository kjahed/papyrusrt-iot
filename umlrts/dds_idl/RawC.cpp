// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p14
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "RawC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Sequence_TypeCode_Static.h"
#include "tao/AnyTypeCode/Struct_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Struct_Field.h"
#include "tao/CDR.h"
#include "tao/ORB_Core.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any_Dual_Impl_T.h"

#if !defined (__ACE_INLINE__)
#include "RawC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_PAPYRUSRTDDS_BUFFERTYPE_CS_)
#define _PAPYRUSRTDDS_BUFFERTYPE_CS_

PapyrusrtDDS::BufferType::BufferType (void)
{}

PapyrusrtDDS::BufferType::BufferType (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      > (max)
{}

PapyrusrtDDS::BufferType::BufferType (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Octet * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      >
    (max, length, buffer, release)
{}

PapyrusrtDDS::BufferType::BufferType (
    const BufferType &seq)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Octet
      > (seq)
{}

PapyrusrtDDS::BufferType::~BufferType (void)
{}

void PapyrusrtDDS::BufferType::_tao_any_destructor (
    void * _tao_void_pointer)
{
  BufferType * _tao_tmp_pointer =
    static_cast<BufferType *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:51



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464


#ifndef _TAO_TYPECODE_PapyrusrtDDS_BufferType_GUARD
#define _TAO_TYPECODE_PapyrusrtDDS_BufferType_GUARD

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace TAO
{
  namespace TypeCode
  {
    namespace
    {
      TAO::TypeCode::Sequence< ::CORBA::TypeCode_ptr const *,
                              TAO::Null_RefCount_Policy>
        PapyrusrtDDS_BufferType_0 (
          ::CORBA::tk_sequence,
          &CORBA::_tc_octet,
          0U);
        
      ::CORBA::TypeCode_ptr const tc_PapyrusrtDDS_BufferType_0 =
        &PapyrusrtDDS_BufferType_0;
    }
  }
}

TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_TYPECODE_PapyrusrtDDS_BufferType_GUARD */

static TAO::TypeCode::Alias<char const *,
                            ::CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
  _tao_tc_PapyrusrtDDS_BufferType (
    ::CORBA::tk_alias,
    "IDL:PapyrusrtDDS/BufferType:1.0",
    "BufferType",
    &TAO::TypeCode::tc_PapyrusrtDDS_BufferType_0);
  

namespace PapyrusrtDDS
{
  ::CORBA::TypeCode_ptr const _tc_BufferType =
    &_tao_tc_PapyrusrtDDS_BufferType;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:88



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:464

static TAO::TypeCode::Struct_Field<
  char const *,
  ::CORBA::TypeCode_ptr const *> const 
    _tao_fields_PapyrusrtDDS_RawBuffer[] =
      {
        { "buffer", &PapyrusrtDDS::_tc_BufferType }
      };
  
static TAO::TypeCode::Struct<
  char const *,
  ::CORBA::TypeCode_ptr const *,
  TAO::TypeCode::Struct_Field<
    char const *,
    ::CORBA::TypeCode_ptr const *> const *,
  TAO::Null_RefCount_Policy>
_tao_tc_PapyrusrtDDS_RawBuffer (
  ::CORBA::tk_struct,
  "IDL:PapyrusrtDDS/RawBuffer:1.0",
  "RawBuffer",
  _tao_fields_PapyrusrtDDS_RawBuffer,
  1);


namespace PapyrusrtDDS
{
  ::CORBA::TypeCode_ptr const _tc_RawBuffer =
    &_tao_tc_PapyrusrtDDS_RawBuffer;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_cs.cpp:59

void
PapyrusrtDDS::RawBuffer::_tao_any_destructor (
    void *_tao_void_pointer)
{
  RawBuffer *_tao_tmp_pointer =
    static_cast<RawBuffer *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_cs.cpp:48


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PapyrusrtDDS
{
  
  // Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::PapyrusrtDDS::BufferType &_tao_elem
    )
  {
    TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::BufferType>::insert_copy (
        _tao_any,
        ::PapyrusrtDDS::BufferType::_tao_any_destructor,
        ::PapyrusrtDDS::_tc_BufferType,
        _tao_elem
      );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    ::PapyrusrtDDS::BufferType *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::BufferType>::insert (
      _tao_any,
      ::PapyrusrtDDS::BufferType::_tao_any_destructor,
      ::PapyrusrtDDS::_tc_BufferType,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::PapyrusrtDDS::BufferType *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::PapyrusrtDDS::BufferType *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::PapyrusrtDDS::BufferType *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::BufferType>::extract (
        _tao_any,
        ::PapyrusrtDDS::BufferType::_tao_any_destructor,
        ::PapyrusrtDDS::_tc_BufferType,
        _tao_elem
      );
}
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    const PapyrusrtDDS::BufferType &_tao_elem)
{
  TAO::Any_Dual_Impl_T<PapyrusrtDDS::BufferType>::insert_copy (
      _tao_any,
      PapyrusrtDDS::BufferType::_tao_any_destructor,
      PapyrusrtDDS::_tc_BufferType,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any,
    PapyrusrtDDS::BufferType *_tao_elem)
{
  TAO::Any_Dual_Impl_T<PapyrusrtDDS::BufferType>::insert (
      _tao_any,
      PapyrusrtDDS::BufferType::_tao_any_destructor,
      PapyrusrtDDS::_tc_BufferType,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    PapyrusrtDDS::BufferType *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const PapyrusrtDDS::BufferType *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const PapyrusrtDDS::BufferType *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<PapyrusrtDDS::BufferType>::extract (
        _tao_any,
        PapyrusrtDDS::BufferType::_tao_any_destructor,
        PapyrusrtDDS::_tc_BufferType,
        _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_cs.cpp:46



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace PapyrusrtDDS
{
  /// Copying insertion.
  void operator<<= (
      ::CORBA::Any &_tao_any,
      const ::PapyrusrtDDS::RawBuffer &_tao_elem)
  {
    TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::RawBuffer>::insert_copy (
        _tao_any,
        ::PapyrusrtDDS::RawBuffer::_tao_any_destructor,
        ::PapyrusrtDDS::_tc_RawBuffer,
        _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
    ::CORBA::Any &_tao_any, ::
    PapyrusrtDDS::RawBuffer *_tao_elem)
{
  TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::RawBuffer>::insert (
      _tao_any,
      ::PapyrusrtDDS::RawBuffer::_tao_any_destructor,
      ::PapyrusrtDDS::_tc_RawBuffer,
      _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    ::PapyrusrtDDS::RawBuffer *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const ::PapyrusrtDDS::RawBuffer *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
    const ::CORBA::Any &_tao_any,
    const ::PapyrusrtDDS::RawBuffer *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T< ::PapyrusrtDDS::RawBuffer>::extract (
        _tao_any,
        ::PapyrusrtDDS::RawBuffer::_tao_any_destructor,
        ::PapyrusrtDDS::_tc_RawBuffer,
        _tao_elem
      );
}
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

/// Copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  const PapyrusrtDDS::RawBuffer &_tao_elem)
{
  TAO::Any_Dual_Impl_T<PapyrusrtDDS::RawBuffer>::insert_copy (
    _tao_any,
    PapyrusrtDDS::RawBuffer::_tao_any_destructor,
    PapyrusrtDDS::_tc_RawBuffer,
    _tao_elem);
}

/// Non-copying insertion.
void operator<<= (
  ::CORBA::Any &_tao_any,
  PapyrusrtDDS::RawBuffer *_tao_elem)
{
  TAO::Any_Dual_Impl_T<PapyrusrtDDS::RawBuffer>::insert (
    _tao_any,
    PapyrusrtDDS::RawBuffer::_tao_any_destructor,
    PapyrusrtDDS::_tc_RawBuffer,
    _tao_elem);
}

/// Extraction to non-const pointer (deprecated).
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  PapyrusrtDDS::RawBuffer *&_tao_elem)
{
  return _tao_any >>= const_cast<
      const PapyrusrtDDS::RawBuffer *&> (
      _tao_elem);
}

/// Extraction to const pointer.
::CORBA::Boolean operator>>= (
  const ::CORBA::Any &_tao_any,
  const PapyrusrtDDS::RawBuffer *&_tao_elem)
{
  return
    TAO::Any_Dual_Impl_T<PapyrusrtDDS::RawBuffer>::extract (
      _tao_any,
      PapyrusrtDDS::RawBuffer::_tao_any_destructor,
      PapyrusrtDDS::_tc_RawBuffer,
      _tao_elem);
}
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_PapyrusrtDDS_BufferType_CPP_
#define _TAO_CDR_OP_PapyrusrtDDS_BufferType_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const PapyrusrtDDS::BufferType &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    PapyrusrtDDS::BufferType &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_PapyrusrtDDS_BufferType_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const PapyrusrtDDS::RawBuffer &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.buffer);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    PapyrusrtDDS::RawBuffer &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.buffer);
}

TAO_END_VERSIONED_NAMESPACE_DECL



